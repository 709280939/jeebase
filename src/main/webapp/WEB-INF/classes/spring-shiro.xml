<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	   default-lazy-init="true">

<!--	<description>Shiro 配置</description>

	&lt;!&ndash; 加载配置属性文件 &ndash;&gt;
	<context:property-placeholder ignore-unresolvable="true" location="classpath:common.properties" />

	&lt;!&ndash;登录认证过滤器&ndash;&gt;
	<bean id="formAuthenticationFilter" class="com.ahut.fastadmin.system.security.FormAuthenticationFilter">
	</bean>

	&lt;!&ndash; CAS认证过滤器 &ndash;&gt;
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
		<property name="failureUrl" value="${adminPath}/login"/>
	</bean>

	&lt;!&ndash; 安全认证过滤器 &ndash;&gt;
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${adminPath}/login" />
		<property name="successUrl" value="${adminPath}?login" />
		<property name="filters">
			<map>
				<entry key="cas" value-ref="casFilter"/>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/static/** = anon
				/userfiles/** = anon
				${adminPath}/cas = cas
				${adminPath}/login = authc
				${adminPath}/logout = logout
				${adminPath}/** = user
				/ReportServer/** = user
			</value>
		</property>
	</bean>

	&lt;!&ndash;定义认证授权域&ndash;&gt;
	<bean id="systemAuthorizingRealm" class="com.ahut.fastadmin.system.security.SystemAuthorizingRealm">
	</bean>

	&lt;!&ndash; 指定本系统sessionId&ndash;&gt;
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="fastadmin.session.id"/>
	</bean>

	&lt;!&ndash;id生成器&ndash;&gt;
	<bean id="idGen" class="com.ahut.fastadmin.common.utils.IdGen">
	</bean>

	&lt;!&ndash; 缓存配置 &ndash;&gt;
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:cache/ehcache-local.xml" />
	</bean>

	&lt;!&ndash; 定义授权缓存管理器 &ndash;&gt;
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	&lt;!&ndash;定义sessionDao&ndash;&gt;
	<bean id="sessionDAO" class="com.ahut.fastadmin.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="activeSessionsCacheName" value="activeSessionsCache" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	&lt;!&ndash; 自定义会话管理配置 &ndash;&gt;
	<bean id="sessionManager" class="com.ahut.fastadmin.common.security.shiro.session.SessionManager">
		<property name="sessionDAO" ref="sessionDAO"/>
		&lt;!&ndash; 会话超时时间，单位：毫秒  &ndash;&gt;
		<property name="globalSessionTimeout" value="1800000"/>
		&lt;!&ndash; 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   &ndash;&gt;
		<property name="sessionValidationInterval" value="12000"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>

	&lt;!&ndash; 定义Shiro安全管理配置 &ndash;&gt;
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="systemAuthorizingRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	&lt;!&ndash; 自定义Session存储容器 &ndash;&gt;
	&lt;!&ndash; 	<bean id="sessionDAO" class="com.thinkgem.jeesite.common.security.shiro.session.JedisSessionDAO"> &ndash;&gt;
	&lt;!&ndash; 		<property name="sessionIdGenerator" ref="idGen" /> &ndash;&gt;
	&lt;!&ndash; 		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" /> &ndash;&gt;
	&lt;!&ndash; 	</bean> &ndash;&gt;


	&lt;!&ndash; 保证实现了Shiro内部lifecycle函数的bean执行 &ndash;&gt;
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	&lt;!&ndash; AOP式方法级权限检查  &ndash;&gt;
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>-->
</beans>
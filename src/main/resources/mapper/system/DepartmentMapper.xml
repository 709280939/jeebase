<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doubleview.jeebase.system.dao.DepartmentDao">

	<!--部门列，共查询共用-->
	<sql id="departmentColumns">
		d.id AS "id",
		d.name AS "name",
		d.sort AS "sort",
		d.code AS "code",
		d.zip_code AS "zipCode",
		d.address AS "address",
		d.phone AS "phone",
		d.fax AS "fax",
		d.email AS "email",
		d.useable AS useable,
		d.remarks AS "remarks",
		d.create_by AS "createBy.id",
		d.create_time AS "createTime",
		d.update_by AS "updateBy.id",
		d.update_time AS "updateTime",
		d.del_status AS "delStatus",
		d.master_id AS "master.id",
		d.area_id AS "area.id",
		d.parent_id AS "parent.id" ,
		dp.name AS "parent.name",
		a.name AS "area.name",
		u.name AS "master.name"
	</sql>

	<!--部门关联，供查询重用-->
	<sql id="departmentJoins">
		FROM sys_department d
			LEFT JOIN sys_department dp ON dp.id = d.parent_id
			LEFT JOIN sys_area a ON a.id = d.area_id
			LEFT JOIN sys_user u ON u.id = d.master_id
	</sql>

	<!--根据id查询Deepartment-->
	<select id="get" resultType="Department">
		SELECT
		<include refid="departmentColumns"/>
		<include refid="departmentJoins"/>
		WHERE d.id = #{id}
	</select>

	<!--根据parentId查询Deepartment-->
	<select id="getByParentId" resultType="Department">
		SELECT
		<include refid="departmentColumns"/>
		<include refid="departmentJoins"/>
		WHERE d.parent_id= #{parentId}
	</select>

	<!--根据条件查询部门-->
	<select id="getList" resultType="Department">
		SELECT
		<include refid="departmentColumns"/>
		<include refid="departmentJoins"/>
		<where>
			<if test="name != null and name != '' ">
				AND d.name LIKE CONCAT('%', #{name}, '%')
			</if>
			<if test="master!= null and master.id != null and master.id != '' ">
				AND d.master_id = #{master.id}
			</if>
			<if test="parent!= null and parent.id != null and parent.id != '' ">
				AND d.parent_id = #{parent.id}
			</if>
			AND d.del_status = "0"
		</where>
		ORDER BY d.create_time
	</select>

	<!--插入部门-->
	<insert id="insert">
		INSERT INTO sys_department(
		id,
		name,
		sort,
		code,
		zip_code,
		address,
		phone,
		fax,
		email,
		useable,
		remarks,
		create_by,
		create_time,
		update_by,
		update_time,
		del_status,
		master_id,
		parent_id,
		area_id
		) VALUES (
		#{id},
		#{name},
		#{sort},
		#{code},
		#{zipCode},
		#{address},
		#{phone},
		#{fax},
		#{email},
		#{useable},
		#{remarks},
		#{createBy.id},
		#{createTime},
		#{updateBy.id},
		#{updateTime},
		#{delStatus},
		#{master.id},
		#{parent.id},
		#{area.id}
		)
	</insert>

	<!--更新部门-->
	<update id="update">
		UPDATE sys_department SET
		name = #{name},
		sort = #{sort},
		code = #{code},
		zip_code = #{zipCode},
		address = #{address},
		phone = #{phone},
		fax = #{fax},
		email = #{email},
		useable=#{useable},
		remarks = #{remarks},
		update_by = #{updateBy.id},
		update_time = #{updateTime},
		master_id = #{master.id},
		parent_id = #{parent.id},
		area_id  = #{area.id}
		WHERE id = #{id}
	</update>

	<!--删除部门-->
	<update id="delete">
		UPDATE sys_department SET
		del_status = #{DELETE}
		WHERE id = #{id}
	</update>

	<!--批量删除-->
	<update id="batchDelete">
		UPDATE sys_department SET
		del_status = #{DELETE}
		<where>
			id IN
			<foreach collection="list" separator="," open="(" close=")" item="dept">
				#{id}
			</foreach>
		</where>
	</update>
	
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doubleview.jeebase.system.dao.RoleDao">

	<!--角色列，供查询重用-->
	<sql id="roleColumns">
		r.id AS "id",
		r.name AS "name",
		r.role_type AS "roleType",
		r.useable AS "useable",
		r.remarks AS "remarks",
		r.create_by AS "createBy.id",
		r.create_time AS "createTime",
		r.update_by AS "updateBy.id",
		r.update_time AS "updateTime",
		r.del_status AS "delStatus"
	</sql>

	<!--角色关联，共查询重用-->
	<sql id="roleJoins">
		FROM sys_role r
	</sql>

	<!--根据id获取角色-->
	<select id="get" resultType="Role">
		SELECT
		<include refid="roleColumns"/>
		<include refid="roleJoins"/>
		WHERE r.id = #{id}
	</select>

	<!--根据名称获取角色-->
	<select id="getByName" resultType="Role">
		SELECT
		<include refid="roleColumns"/>
		<include refid="roleJoins"/>
		WHERE r.name = #{name}
		AND r.del_status = '0'
	</select>

	<!--获取所有角色-->
	<select id="getList" resultType="Role">
		SELECT
		<include refid="roleColumns"/>
		<include refid="roleJoins"/>
		<if test="user != null and user.id != null and user.id != ''">
			JOIN sys_user_role ur ON ur.role_id = r.id AND ur.user_id = #{user.id}
		</if>
		<where>
			<if test="roleType != null and roleType != '' ">
				AND r.role_type = #{roleType}
			</if>
			<if test="useable != null and useable != '' ">
				AND r.useable = #{useable}
			</if>
			<if test="name != null and name != '' ">
				AND r.name LIKE  CONCAT('%', #{name}, '%')
			</if>
			AND r.del_status = "0"
		</where>
		ORDER BY r.create_time
	</select>

	<!--插入角色信息-->
	<insert id="insert">
		INSERT INTO sys_role(
		id,
		name,
		role_type,
		useable,
		remarks,
		create_by,
		create_time,
		update_by,
		update_time,
		del_status
		) VALUES (
		#{id},
		#{name},
		#{roleType},
		#{useable},
		#{remarks},
		#{createBy.id},
		#{createTime},
		#{updateBy.id},
		#{updateTime}
		)
	</insert>

	<!--更新角色信息-->
	<update id="update">
		UPDATE sys_role SET
		name = #{name},
		role_type = #{roleType},
		useable = #{useable},
		remarks = #{remarks},
		update_by = #{updateBy.id},
		update_time = #{updateTime},
		del_status = #{delStatus}
		WHERE id = #{id}
	</update>

	<!--删除角色信息-->
	<update id="delete">
		UPDATE sys_role SET
			del_status = '1'
		WHERE id = #{id}
	</update>

	<!--插入角色菜单信息-->
	<insert id="insertRM">
		INSERT INTO sys_role_menu(
		role_id,
		menu_id
		) VALUES (
		#{roleId},
		#{menuId}
		)
	</insert>

	<!--插入角色菜单信息-->
	<insert id="batchInsertRM">
		INSERT INTO sys_role_menu(
			role_id,
			menu_id
		) VALUES
		<foreach collection="list" item="roleMenu" separator=",">
			(#{roleId},#{menuId})
		</foreach>
	</insert>

	<!--删除角色菜单信息-->
	<delete id="deleteRM">
		DELETE FROM sys_role_menu
		<where>
			<if test="roleId != null and roleId != '' ">
				AND role_id = #{roleId}
			</if>
			<if test="menuId != null and menuId !='' ">
				AND menu_id = #{menuId}
			</if>
		</where>
	</delete>

	<!--删除角色菜单信息-->
	<delete id="deleteRMByMenuId">
		DELETE FROM sys_role_menu
		<where>
			menu_id IN
			<foreach collection="list" item="menuId" separator="," open="(" close=")">
				#{menuId}
			</foreach>
		</where>
	</delete>

	<!--删除角色菜单信息-->
	<delete id="deleteRMByRoleId">
		DELETE FROM sys_role_menu
		<where>
			role_id IN
			<foreach collection="list" item="roleId" separator="," open="(" close=")">
				#{roleId}
			</foreach>
		</where>
	</delete>

</mapper>
